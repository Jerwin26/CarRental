@model CarRental.Models.Vehicle

@{
    ViewBag.Title = "Add Vehicle By Host";
    Layout = "~/Views/Host/HostLayout.cshtml";
}

<style>
    body {
        background-image: url('../../image/logo/carrental image/backgro.jpeg');
    }
    .Vehiclebyhost {
        margin-bottom: 2%;
        margin-top: 2%;
        background-color: rgba(255, 255, 255, 0.9);
        width: 80%;
        max-width: 600px;
        margin: 0 auto;
        padding: 20px;
        border: 1px solid #ccc;
        border-radius: 10px;
        box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.2);
    }

    .card-title {
        font-size: 24px;
    }

    .custom-file-label::after {
        content: "Choose file";
    }

    .box{
        margin-top:2%;
        margin-bottom:2%;
    }
</style>
<link href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
<div class="box">
    @using (Html.BeginForm("AddVehicleByHost", "Host", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

        <div class="Vehiclebyhost">
            <div class="card-body">
                <h4 class="card-title " style="text-align:center"> Add vehicle</h4>
                <hr />

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                @*<div class="form-group">
                    <tb>Host id</tb>
                    @Html.EditorFor(model => model.customerId, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.customerId, "", new { @class = "text-danger" })
                </div>*@

                <div class="form-group">
                    @Html.LabelFor(model => model.brand, new { @class = "col-form-label" })
                    @Html.EditorFor(model => model.brand, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.brand, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.licensePlate, new { @class = "col-form-label" })
                    @Html.EditorFor(model => model.licensePlate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.licensePlate, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.fuelType, new { @class = "col-form-label" })
                    @Html.EditorFor(model => model.fuelType, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.fuelType, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.vehicleType, new { @class = "col-form-label" })
                    @Html.EditorFor(model => model.vehicleType, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.vehicleType, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.vehiclePrice, new { @class = "col-form-label" })
                    @Html.EditorFor(model => model.vehiclePrice, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.vehiclePrice, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.Label("Vehicle image", new { @class = "col-form-label" })
                    <div class="custom-file">
                        <input type="file" id="image" name="image" class="custom-file-input" onchange="updateFileName()">
                        <label class="custom-file-label" for="image" id="imageLabel">Choose file</label>
                    </div>
                    @Html.ValidationMessageFor(model => model.vehicleImage, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    <input type="submit" value="Add" class="btn btn-success" />
                </div>
            </div>
        </div>

        <script>
            function updateFileName() {
                var input = document.getElementById("image");
                var label = document.getElementById("imageLabel");

                if (input.files.length > 0) {
                    label.textContent = input.files[0].name;
                } else {
                    label.textContent = "Choose file";
                }
            }
        </script>

    }
</div>