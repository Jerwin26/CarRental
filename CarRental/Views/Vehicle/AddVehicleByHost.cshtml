@model CarRental.Models.Vehicle

@{
    ViewBag.Title = "AddVehicleByHost";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <title>@ViewBag.Title</title>

    <!-- Add Bootstrap CSS -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.5.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <!-- Optional: Add Bootstrap Icons (if needed) -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.28.0/font/bootstrap-icons.css" rel="stylesheet">

    <style>
        /* Center the form vertically and horizontally */
        .vehicle-form-container {
            width: 80%;
            max-width: 600px;
            margin: 0 auto;
            padding: 20px;
            border: 1px solid #ccc;
            border-radius: 10px;
            box-shadow: 0px 0px 10px rgba(0, 0, 0, 0.2);
        }

        .form-group {
            margin-bottom: 20px;
        }

        .text-center {
            text-align: center;
        }
    </style>
</head>
<body>

    <div class="container mt-4">
        <div class="row">
            <div class="col-md-12">
                <div class="vehicle-form-container">
                    <h2 class="text-center">@ViewBag.Title</h2>
                    <form method="post" action="@Url.Action("AddVechicleByHost", "Host")" enctype="multipart/form-data">
                        @Html.AntiForgeryToken()

                        <h4 class="text-center">Vehicle Details</h4>
                        <hr />

                        <div class="form-group">
                            @Html.LabelFor(model => model.brand, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.brand, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.brand, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.licensePlate, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.licensePlate, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.licensePlate, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.fuelType, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.fuelType, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.fuelType, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.vehicleType, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.vehicleType, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.vehicleType, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.vehiclePrice, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.vehiclePrice, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.vehiclePrice, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.vehicleStatus, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.vehicleStatus, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.vehicleStatus, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Hostapprovedstatus, htmlAttributes: new { @class = "control-label" })
                            @Html.EditorFor(model => model.Hostapprovedstatus, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Hostapprovedstatus, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            @Html.Label("Vehicle Image", new { @class = "col-form-label" })
                            <div class="custom-file">
                                <input type="file" id="image" name="image" class="custom-file-input">
                                <label class="custom-file-label" for="image">Choose file</label>
                            </div>
                            @Html.ValidationMessageFor(model => model.vehicleImage, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group text-center">
                            <input type="submit" value="Add Vehicle" class="btn btn-primary btn-lg" />
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!-- Add Bootstrap JavaScript -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.5.0/dist/js/bootstrap.min.js"></script>

</body>
</html>
