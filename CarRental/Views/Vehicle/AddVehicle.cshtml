@model CarRental.Models.Vehicle
@{
    Layout = "~/Views/Admin/adminLayout.cshtml";
}

@using (Html.BeginForm("AddVehicle", "Vehicle", FormMethod.Post, new { enctype = "multipart/form-data", @class = "vehicle-form" }))
{
    @Html.AntiForgeryToken()

    <link href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
    <link href="~/Style/AddVehicleStyleSheet.css" rel="stylesheet" />
   

    <div class="container mt-4">
        <div class="form-container">
            <h4> Add vehicle</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })

            <div class="form-group">
                @Html.LabelFor(model => model.brand, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.brand, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.brand, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.licensePlate, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.licensePlate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.licensePlate, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.fuelType, htmlAttributes: new { @class = "control-label" })
                @Html.DropDownListFor(model => model.fuelType, new SelectList(new List<string> { "Petrol", "Diesel" }, "Petrol"), "-- Select Fuel Type --", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.fuelType, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.vehicleType, htmlAttributes: new { @class = "control-label" })
                @Html.DropDownListFor(model => model.vehicleType, new SelectList(new List<string> { "Standard", "Luxury" }, "Standard"), "-- Select Vehicle Type --", new { @class = "form-control", id = "vehicleTypeDropdown" })
                @Html.ValidationMessageFor(model => model.vehicleType, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.vehiclePrice, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.vehiclePrice, new { htmlAttributes = new { @class = "form-control", id = "vehiclePriceInput" } })
                @Html.ValidationMessageFor(model => model.vehiclePrice, "", new { @class = "text-danger" })
            </div>
            <div class="form-group">
                <label class="control-label" for="image">Vehicle Image</label>
                <div class="custom-file">
                    <input type="file" id="image" name="image" class="custom-file-input">
                    <label class="custom-file-label" for="image">Choose file</label>
                </div>
                @Html.ValidationMessageFor(model => model.vehicleImage, "", new { @class = "text-danger" })
            </div>


            <div class="form-group">
                <input type="submit" value="Add" class="btn btn-success" />
            </div>
        </div>
    </div>
}

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    $("#vehicleTypeDropdown").change(function () {
        var selectedVehicleType = $(this).val();
        var vehiclePriceInput = $("#vehiclePriceInput");

        if (selectedVehicleType === "Standard") {
            vehiclePriceInput.val("2500");
        } else if (selectedVehicleType === "Luxury") {
            vehiclePriceInput.val("5000");
        }
    });
</script>
